{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "EDiC",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#includes"
    },
    {
      "match": "^[ \t]*[a-zA-Z]\\w*:",
      "name": "variable.named.edic"
    },
    {
      "match": "^[ \t]*(0x\\d+\\.)?(\\.?\\S+)[ \t]*=[ \t]*([^#@/]+)",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#numerics"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#constants"
            }
          ]
        },
        "3": {
          "patterns": [
            {
              "include": "#numerics"
            },
            {
              "include": "#strings"
            }
          ]
        }
      }
    },
    {
      "match": "^[ \t]*\\b(?i)(\\S+)[ \t]+([^,]*),[ \t]+([^#@/]+)",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#memory"
            },
            {
              "include": "#arithmetics"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#registers"
            }
          ]
        },
        "3": {
          "patterns": [
            {
              "include": "#numerics"
            },
            {
              "include": "#registers"
            },
            {
              "include": "#constants"
            },
            {
              "include": "#addresses"
            }
          ]
        }
      }
    },
    {
      "match": "^[ \t]*(?i)(sma)[ \t]+([^#@/]+)",
      "captures": {
        "1": {
          "name": "support.function.mnemonic.memory.edic"
        },
        "2": {
          "patterns": [
            {
              "include": "#registers"
            },
            {
              "include": "#numerics"
            },
            {
              "include": "#constants"
            }
          ]
        }
      }
    },
    {
      "match": "^[ \t]*(?i)(\\S+)[ \t]+([^#@/]+)",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#branches"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#labelsText"
            }
          ]
        }
      }
    },
    {
      "match": "^[ \t]*(?i)ret",
      "name": "support.function.mnemonic.memory.edic"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "match": "[ \t]*([;@]|//|#).*$",
          "name": "comment.edic"
        },
        {
          "begin": "\\/\\*",
          "beginCaptures": {
            "0": {
              "name": "comment.begin.edic"
            }
          },
          "endCaptures": {
            "0": {
              "name": "comment.end.edic"
            }
          },
          "end": "\\*\\/",
          "name": "comment.edic"
        }
      ]
    },
    "includes": {
      "patterns": [
        {
          "match": "[ \t]*(include)\\s+(\"\\S+\")$",
          "name": "meta.import.edic",
          "captures": {
            "1": {
              "name": "keyword.control.import.edic"
            },
            "2": {
              "name": "string.quoted.edic"
            }
          }
        }
      ]
    },
    "branches": {
      "match": "b(?:al|mp|eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le)?|call",
      "name": "support.function.mnemonic.memory.edic"
    },
    "arithmetics": {
      "match": "(?:add|sub|and|eor|xor|xnor|lsr|lsl|mov)s?|cmp",
      "name": "support.function.mnemonic.arithmetic.edic"
    },
    "memory": {
      "match": "ldr|lds|str|sts|ldf|stf",
      "name": "support.function.mnemonic.memory.edic"
    },
    "addresses": {
      "name": "meta.brace.square.edic",
      "match": "\\[[ \t]*(\\S+)[ \t]*\\]",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#registers"
            },
            {
              "include": "#numerics"
            },
            {
              "include": "#constants"
            }
          ]
        }
      }
    },
    "numerics": {
      "patterns": [
        {
          "match": "\\b0x[0-9a-fA-F]+\\b",
          "name": "constant.numeric.hex.edic"
        },
        {
          "match": "-?\\b\\d+\\b",
          "name": "constant.numeric.dec.edic"
        }
      ]
    },
    "registers": {
      "patterns": [
        {
          "match": "\\b(?i)r[01](?-i)\\b",
          "name": "storage.register.edic"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "match": "\"(\\\\.|[^\"])*\"",
          "name": "string.quoted.edic"
        }
      ]
    },
    "labelsText": {
      "patterns": [
        {
          "match": "\\b[a-zA-Z]\\w*\\b",
          "name": "variable.named.edic"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "\\.?[a-zA-Z]\\w*\\b",
          "name": "variable.other.constant.edic"
        }
      ]
    }
  },
  "scopeName": "source.edic"
}